<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 회원정보 처리 SQL  mapper구간내에 있는 SQLansemfdl -->
<mapper namespace="global.sesoc.board.dao.BoardMapper"><!-- BoardMapper.java -->
<!-- BoardMapper.java는 추상화클래스이며 
	public int writeBoard(BoardVO vo);
	public BoardVO readBoard(int num);
	public ArrayList<BoardVO> listBoard();
	위의 3가지 메소드들이 가이드처럼 제시되어 있다.
	
	이들에 대하여 SQL문을 정의하는 것이 boardMapper.xml의 역할이다.
-->


<!-- 1. 글쓰기 저장 -->
<insert id="writeBoard" parameterType="board">  
insert into board (
	num
	, id
	, title
	, contents
)
values (
	board_seq.nextval
	, #{id}
	, #{title}
	, #{contents}
)
</insert> <!-- xml은 무조건! 끝나는 태그가 있어야 합니다. 없으면 에러100%인데 이클립스에서 에러를 지적못해서 헤맵니다.-->


<!-- [2] 1개의 글의 정보를 읽어오기 -->

<select id="readBoard" parameterType="int" resultType="board">
select * from board where num=#{num}
</select>

<!-- [3] 모든 글들의 정보를 읽어오기-->
<select id="listBoard" resultType="board">
select * from board 
</select>


<!-- [4]글 삭제 -->
<delete id="deleteBoard" parameterType="int">
delete from board where num= #{num}
</delete>


<!-- [5]글 수정-->
<update id="updateBoard" parameterType="board">
update board set title=#{title}, contents=#{contents} where num= #{num}
</update>

<select id="nullCheck" parameterType="int" resultType="board">
select * from board where num=#{num}
</select>

<!-- 
<select id="selectPersonByname" parameterType="String" resultType="person">
select * from person where name like '%' || #{name} || '%'
</select>
 -->


</mapper>